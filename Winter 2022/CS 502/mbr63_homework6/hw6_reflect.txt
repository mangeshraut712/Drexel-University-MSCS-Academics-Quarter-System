By looking at the program I get that we are using the linear search to guess the user input value. We are using the inner search for 26 letters of alphabets and space dot and explanation mark (“ “,”.”,”!”) so the total array is of 29 size and we are trying to find whether the typed letter was guessed right by the program or not. Suppose you want to guess for letter c then at 5th position in 29 symbols and alphabet array then the program will run 5 times till reaches the c and the counter will become 51. About how many questions were needed to type the sentence using linear search?Ans: It depends on the user input value till get the correct alphabet like c it always start from first to last so start from space no then dot no till b it is no then c which we want then yes after yes again it start from start to last same for all.The questions we are asking it depend upon the positions of letter in alphabet For c it ask 6 question so it is O(6)Generally it depend upon the letter which we want to guess if that letter is at ith position we ask ith questions. 2. About how many questions were needed to type the sentence using binary search?Ans: Binary Search works on the sorted list and uses the approach of divide and conquer. So it will check the letter is in first half or second half which is find my mid value. If I want to guess c which is in first half then again it will again check first half middle till get the guess letter. Same for second half.For guess the letter it will ask 5 questions every time and you get the letter.In this binary search it takes Olog(5) for guessing the letter and Olog(n) is the time complexity.3. If you were Jean-Dominique, which program would you rather use?Ans: If I were Jean-Dominique I'll use the binary search method because it uses very less time complexity. Binary search is faster than linear search except for small arrays. However, the array must be sorted first to be able to apply binary search.4. Is there anything you could still change/improve?Ans: Yes. As the above program has implemented liner search you will use ad implement a binary search algorithm where you can guess the letter continuously in same array from first to last.5. What did you need to figure out on your own that wasn't obvious from the pseudocode?Ans: I have to think about how the index working so I put the system.out.println so see the difference of index numbers and I get the clarity to get my logic then when I have to say yes and when no then store the letters in list and print the value. The working of linear search pseudocode help me a lot but for binary search I have to think about index values and the Number of times the query will execute to get the result.//Linear Searchimport java.util.ArrayList;import java.util.Scanner;public class lsearch {	public static void main(String args[]) {		String alphabet[] = { " ", "!", ".", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o",				"p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z" };		String letter = "";		ArrayList<String> list = new ArrayList<String>();		int counter = 0;		Scanner scanner = new Scanner(System.in);		while (true) {			System.out.println("Are you thinking of the letter" + "'" + alphabet[counter] + "'" + "?");			letter = scanner.nextLine();			if (letter.equals("y")) {				if (alphabet[counter].equals("!")) {					break;				} else {					list.add(alphabet[counter]);					counter = 0;					continue;				}			}			if (counter == alphabet.length - 1) {				counter = 0;			} else {				counter++;			}		}		String result = String.join("", list);		System.out.println("You typed:\n" + result);	}}//Binary Searchimport java.util.ArrayList;import java.util.Scanner;class bsearch {	public static void main(String args[]) {		String letter = "";		Scanner scanner = new Scanner(System.in);		String alphabet[] = { " ", "!", ".", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o",				"p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z" };		int low = 0;		int high = alphabet.length - 1;		int mid = (low + high) / 2;		char charFromAlphabet = alphabet[mid].charAt(0);		int t1 = charFromAlphabet;		ArrayList<String> list = new ArrayList<String>();		while (true) {			System.out.println("Is your letter between " + "'" + alphabet[low] + "'" + " and " + "'" + alphabet[mid]					+ "'" + "? (y/n)");			letter = scanner.nextLine();			if (letter.contains("!")) {				break;			}			if (letter.contains("y")) {				high = mid;				mid = (low + high) / 2;				if (low == high) {					System.out.println("Is your letter " + "'" + alphabet[mid]);					letter = scanner.nextLine();					if (letter.contains("y")) {						list.add(alphabet[low]);					}					low = 0;					high = alphabet.length - 1;					mid = (low + high) / 2;				}			}			else if (letter.contains("n")) {				low = mid + 1;				mid = (low + high) / 2;				if (low == high) {					System.out.println("Is your letter " + "'" + alphabet[mid]);					letter = scanner.nextLine();					if (letter.contains("y")) {						list.add(alphabet[low]);					}					low = 0;					high = alphabet.length - 1;					mid = (low + high) / 2;				}			} else {				System.out.println("Wrong input");			}		}		String result = String.join("", list);		System.out.println("You typed:\n" + result);	}}