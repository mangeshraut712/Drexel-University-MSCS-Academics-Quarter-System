README

This repository contains code that performs Most of the concepts which we learn in lecture of CV583 class. The code is implemented in MATLAB and includes different parts to accomplish the task.

1. Part 1: Edge Detection
   - The code reads an input image and converts it to grayscale.
   - A smoothing kernel is defined and applied to the grayscale image.
   - An edge kernel (Sobel operator) is used to compute the gradient of the smoothed image.
   - The gradient magnitude and direction are computed, and a threshold is applied to obtain edge pixels.

2. Part 2: Hough Transform for Line Detection
   - The code performs the Hough Transform to detect lines in the edge image.
   - The Hough accumulator array is initialized.
   - Each edge pixel is processed to calculate its contribution to the accumulator array.

3. Part 3: Relevant Line Identification
   - Peaks in the Hough Transform are detected as potential lines.
   - A peak detection algorithm is used to identify the highest peaks above a threshold.
   - The selected lines are superimposed on the edge image for visualization.

4. Part 4: Line Intersections
   - The provided corner points are used to draw lines on the edge image.

5. Part 5: Image Rectification
   - The code rectifies the input image using a homography transformation.
   - The homography matrix is computed based on the given corner points.
   - The rectified image is generated by mapping points from the rectified image to the original image.

Running the Code:
1. Make sure you have MATLAB installed on your system.
2. Place the "input1.png" image file in the same directory as the code files.
3. Run the MATLAB code to execute the edge detection, line detection, and rectification processes.
4. The results will be displayed in separate figures and saved in the current MATLAB directory.

Additional Notes:
- The code assumes that the input image is named "input1.png". Modify the code if using a different image.
- Adjust the parameters (such as the smoothing kernel size, threshold, or number of peaks) as needed for different images or requirements.
- The code includes comments for better understanding and customization.

Please refer to the PDF file included in this repository for visual outputs and more details about the code execution.

